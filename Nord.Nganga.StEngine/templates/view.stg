delimiters "%","%"

templateVersion() ::=<%
1.0.0
%>

file(header, body) ::= <<
%header%
%body%
>>

header(model) ::= <<
%headerStart()%
    Generated on %model.genDate% at %model.genTime% 
    Controller type name: %model.controllerTypeName%
    Templates directory: %model.templatesDirectory%
    Template version: %templateVersion()%
    Output signature: %model.md5Checksum%    
%headerEnd()%
>>

headerStart() ::= <<
<!-- 
  %headerTag()%
>>

headerEnd() ::= <<
  %headerTag()%
  -->
>>

headerTag() ::= <%
NGANGA - GENERATED CODE
%>

body(model) ::= <<
<div ng-controller="%model.NgControllerName%">
  <nord-row>
    <h2>
      %model.Header%
    </h2>
  </nord-row>
  %model.ViewCoordinatedInfo:{vci|%childView(vci)%}%
</div>
>>

ngModel(model, parentObjectName) ::= <<
%if(parentObjectName)% ng-model="%parentObjectName%.%model.Member.FieldName%" %else% ng-model="%model.Member.FieldName%" %endif%
>>

injectHtml(model, key) ::= <%
%model.HtmlIncludes.(key): {c| <!-- Injected HTML at context %key% --> %\n%
%c% %\n%
<!-- End injected HTML -->}; separator="%\n%"%
%>

childView(model) ::= <<
%injectHtml(model, "BeforeHeader")%
%injectHtml(model, "AfterHeader")%

<nord-row>
  <form name="%model.NgFormName%" id="%model.NgFormName%" ng-submit="%model.NgSubmitAction%" class="user-edit-form form-horizontal" novalidate>
    %injectHtml(model, "InsideFormAtBeginning")%

    %childViewNested(model)%
    %if(!model.ViewModel.IsViewOnly)%    

    %injectHtml(model, "BeforeSaveButtons")%

    <nord-row-simple>
      %! issues with checking for invalid... model.NgFormNvame.$invalid !%
      <button class="btn btn-primary pull-right" type="submit" ng-disabled="%model.NgFormName%.$pristine">
        <span class="glyphicon glyphicon-floppy-save"></span> %model.SaveButtonText%
      </button>
    </nord-row-simple>
    %endif%

    %injectHtml(model, "InsideFormAtEnd")%
  </form>

  %injectHtml(model, "AfterContent")%
</nord-row>
>>

childViewNested(model) ::= <%
%model.Sections:{s|%section(s, model.ParentObjectName)%}%
%>

section(model, parentObjectName) ::= <<

<nord-form-section %model.Attributes.keys: {a|%a%="%model.Attributes.(a)%"}; separator=" "%>
  %(sectionHeaderMap.(model.Title))(model)% 
  %model.Rows:{r|%row(r, parentObjectName)%}%
</nord-form-section>

>>

sectionTitle(model) ::= <<

<nord-row>
  <h4>
    %model.Title%
  </h4>
</nord-row>
>>

nullTemplate(model) ::= <% %> 

sectionHeaderMap ::= [
    "":"nullTemplate",
    default: "sectionTitle"
]

row(model, parentObjectName) ::= <<

<nord-row-simple>
  %model.Members:{m|
  %member(m, parentObjectName)%
  }%
</nord-row-simple>
>>

member(model, parentObjectName) ::= <<
 %(controlTypeTemplateMap.(model.NgangaControlTypeSt))(model,parentObjectName)% 
>>

controlTypeTemplateMap ::= [
    "BoolControl" : "boolControl",
    "CommonSelect" : "commonSelect",
    "DateControl" : "dateControl",
    "MultipleComplexEditor" : "multipleComplexEditor",
    "MultipleSimpleEditorForComplex" : "multipleSimpleEditorForComplex",
    "MultipleSimpleEditorForPrimitive" : "multipleSimpleEditorForPrimitive",
    "NumberControl" : "numberControl",
    "TextControl": "textControl",
    "CommonSelectExpansible": "commonSelectExpansible",
    default : "THROWANEXCEPTION"	
]

caps(model) ::= <%
%if(model.Member.StartCap)%
start-cap="%model.Member.StartCap%" 
%endif%

%if(model.Member.EndCap)%
end-cap="%model.Member.EndCap%" 
%endif%
%>

boolControl(model, parentObjectName) ::= <%
<nord-bool-control  
%ngModel(model, parentObjectName)% 
twelfths="%model.Width%" 
field-label-text="%model.Member.DisplayName%" 
%if(model.Member.IsRequired)%
required
%endif%
%! The directive has support for changing the yes and no labels to something else !%
></nord-bool-control>
%>

commonSelect(model, parentObjectName) ::= <%
<nord-common-select 
%if(!model.Member.SelectCommon.RestrictUntilResolved)%wait-resolve="false" %endif%
%! Need to fill in startcap, endcap (but no attrs exist ATM) !%
%ngModel(model, parentObjectName)% 
twelfths="%model.Width%" 
field-label-text="%model.Member.DisplayName%" 
common-select-source="%model.Member.SelectCommon.ObjectName%.%model.Member.SelectCommon.CommonInformationName%%if(model.Member.SelectCommon.Index)%[%parentObjectName%.%model.Member.SelectCommon.Index%]%endif%" 

%if(model.Member.IsRequired)%
required
%endif%
>
</nord-common-select>
%>

commonSelectExpansible(model, parentObjectName) ::= <%
<nord-common-select-expansible 
%if(!model.Member.SelectCommon.RestrictUntilResolved)%wait-resolve="false" %endif%
%! Need to fill in startcap, endcap (but no attrs exist ATM) !%
%ngModel(model, parentObjectName)% 
twelfths="%model.Width%" 
field-label-text="%model.Member.DisplayName%" 
common-select-source="%model.Member.SelectCommon.ObjectName%.%model.Member.SelectCommon.CommonInformationName%%if(model.Member.SelectCommon.Index)%model.Member.SelectCommon.Index%endif%"

%if(model.Member.IsRequired)%
required
%endif%
>
</nord-common-select>
%>

dateControl(model, parentObjectName) ::= <%
<nord-date-control 
%! Need to fill in startcap, endcap (but no attrs exist ATM) !%
%ngModel(model, parentObjectName)% 
twelfths="%model.Width%" 
field-label-text="%model.Member.DisplayName%"  
%caps(model)% 

%if(model.Member.IsRequired)%
required
%endif%
>
</nord-date-control>
%>

multipleComplexEditor(model, parentObjectName) ::= <%
<nord-multiple-complex-editor 
parent-object="%parentObjectName%" 
collection-name="%model.Member.FieldName%" 
child-field-name="%model.Member.CoordinatedInfo.ParentObjectName%" 
panel-top-label="%model.Member.DisplayName%" 
field-definitions="%model.Member.TableFieldsExpression%" 
%if(model.Member.SubordinateActionsExpression)%
additional-buttons="%model.Member.SubordinateActionsExpression%" 
%endif%

%if(model.Member.IsLedger)%
ledger-sum-property="%model.Member.LedgerSumProperty%"
%endif%

%if(model.Member.Model.IsViewOnly)%
view-only 
%endif%
>
%if(!model.Member.Model.IsViewOnly)%
%\n%
%childViewNested(model.Member.CoordinatedInfo)%
%\n%
%endif%
</nord-multiple-complex-editor>
%>

multipleSimpleEditorForComplex(model, parentObjectName) ::= <%
<nord-multiple-simple-editor 
parent-object="%parentObjectName%" 
collection-name="%model.Member.FieldName%" 
field-label-text="%model.Member.DisplayName%" 
child-field-name="%model.Member.CoordinatedInfo.ParentObjectName%"
>
%\n%
%childViewNested(model.Member.CoordinatedInfo)%
%\n%
</nord-multiple-simple-editor>
%>

multipleSimpleEditorForPrimitive(model, parentObjectName) ::= <%
<nord-multiple-simple-editor 
parent-object="%parentObjectName%" 
child-field-name="%model.Member.FieldName%" 
field-label-text="%model.Member.DisplayName%" 
collection-name="%model.Member.FieldName%" is-primitive>
    %\n% %if(model.Member.SelectCommon)% %commonSelect(model)% %else% %(clrTypeMap.(model.Member.DataType.Name))(model)% %endif% %\n%
</nord-multiple-simple-editor>
%>

clrTypeMap ::= [
    "Boolean":"boolControl",
    "String":"textControl",
    "DateTime":"dateControl",
    default:"numberControl"
]

numberControl(model, parentObjectName) ::= <%
<nord-number-control 
%! Need to fill in startcap, endcap (but no attrs exist ATM) !%
%ngModel(model, parentObjectName)% 
twelfths="%model.Width%" 
field-label-text="%model.Member.DisplayName%" 

%if(model.Member.Minimum)%
min="%model.Member.Minimum%" 
%endif%

%if(model.Member.Minimum)%
max="%model.Member.Maximum%" 
%endif%

step="%model.Member.Step%" 

%caps(model)% 

%if(model.Member.IsRequired)%
required
%endif%

%if(model.Member.IsViewOnly)%
view-only
%endif%
>
</nord-number-control>
%>

textControl(model, parentObjectName) ::= <%
<nord-text-control 
%! Need to fill in startcap, endcap (but no attrs exist ATM) !%
%ngModel(model, parentObjectName)% 
twelfths="%model.Width%" 
field-label-text="%model.Member.DisplayName%" 

%caps(model)% 

%if(model.Member.IsRequired)%
required 
%endif%

%if(model.Member.IsViewOnly)%
view-only 
%endif%
>
</nord-text-control>
%>
